<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://www.ehcache.org/ehcache.xsd">
  <!--Sets the path to the directory where cache .data files are created.

       If the path is a Java System Property it is replaced by
       its value in the running VM.

       The following properties are translated:
       user.home - User's home directory
       user.dir - User's current working directory
       java.io.tmpdir - Default temp file path 
  -->
  <diskStore path="./target/tmp"/>

  <!--
    Default Cache configuration. These will applied to caches programmatically created through
    the CacheManager.

    The following attributes are required for defaultCache:

    maxInMemory       - Sets the maximum number of objects that will be created in memory
    eternal           - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
                        is never expired.
    timeToIdleSeconds - Sets the time to idle for an element before it expires. Is only used
                        if the element is not eternal. Idle time is now - last accessed time
    timeToLiveSeconds - Sets the time to live for an element before it expires. Is only used
                        if the element is not eternal. TTL is now - creation time
    overflowToDisk    - Sets whether elements can overflow to disk when the in-memory cache
                        has reached the maxInMemory limit.
    the中文说明
    maxElementsInMemory=“10000” //Cache中最多允许保存的数据对象的数量
    external=“false” //缓存中对象是否为永久的，如果是，超时设置将被忽略，对象从不过期 
    timeToIdleSeconds=“1000”  //缓存数据钝化时间(设置对象在它过期之前的空闲时间)  
    timeToLiveSeconds=“1000”  //缓存数据的生存时间(设置对象在它过期之前的生存时间)
    overflowToDisk=“false”    //内存不足时，是否启用磁盘缓存  
    memoryStoreEvictionPolicy="LRU" //内存不足时数据对象的清除策略
    ehcache中缓存的3种清空策略：
    FIFO(first in first out):先进先出
    LFU( Less Frequently Used):一直以来最少被使用的。如上面所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。
    LRU(Least Recently Used):最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
  -->
  <defaultCache 
    maxElementsInMemory="10000"
    eternal="false"
    timeToIdleSeconds="120"
    timeToLiveSeconds="120"
    overflowToDisk="true"/>
    
  <!--
    Query Cache configuration
    This cache contains 5000 entity
    lives for more than 6 minutes.
  -->
  <cache name="org.hibernate.cache.internal.StandardQueryCache"
    maxEntriesLocalHeap="5000"
    eternal="false"
    timeToLiveSeconds="3600"
    overflowToDisk="false"/>


  <cache name="org.hibernate.cache.spi.UpdateTimestampsCache"
    maxEntriesLocalHeap="5000"
    eternal="true"
    overflowToDisk="true"/>

  <!--
    Predefined caches.  Add your cache configuration settings here.
    If you do not have a configuration for your cache a WARNING will be issued when the
    CacheManager starts

    The following attributes are required for defaultCache:

    name              - Sets the name of the cache. This is used to identify the cache. It must be unique.
    maxInMemory       - Sets the maximum number of objects that will be created in memory
    eternal           - Sets whether elements are eternal. If eternal,  timeouts are ignored and the element
                        is never expired.
    timeToIdleSeconds - Sets the time to idle for an element before it expires. Is only used
                        if the element is not eternal. Idle time is now - last accessed time
    timeToLiveSeconds - Sets the time to live for an element before it expires. Is only used
                        if the element is not eternal. TTL is now - creation time
    overflowToDisk    - Sets whether elements can overflow to disk when the in-memory cache
                        has reached the maxInMemory limit.
  -->

  <!--
    Sample cache named entityCache
    This cache contains a maximum in memory of 10000 elements, and will expire
    an element if it is idle for more than 5 minutes and lives for more than
    10 minutes.

    If there are more than 10000 elements it will overflow to the
    disk cache, which in this configuration will go to wherever java.io.tmp is
    defined on your system. On a standard Linux system this will be /tmp"
  -->
  <cache name="entityCache"
    maxElementsInMemory="10000"
    eternal="false"
    timeToIdleSeconds="300"
    timeToLiveSeconds="600"
    overflowToDisk="true"/>

  <!--
    Sample cache named userCache
    This cache contains 10000 users. users will always be held in memory.
    They are not expired. 
  -->
  <cache name="userCache"
    maxElementsInMemory="10000"
    eternal="true"
    timeToIdleSeconds="0"
    timeToLiveSeconds="0"
    overflowToDisk="false"/>

</ehcache>